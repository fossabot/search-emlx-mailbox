.row-fluid
  .span6
    .email-search
      %form#email-search-form(class="well form-search" action="#{emails_search_path}")
        .form-group
          =date_field_tag :date_from, params[:date_from], :as => :string, placeholder: 'MM/DD/YYYY From'
          =date_field_tag :date_to, params[:date_to], :as => :string, placeholder: 'MM/DD/YYYY To'
        =select_tag(:fields, options_for_select(%w(from to subject body), params[:fields]), { class: 'field-select', multiple: true, size: 4 })
        .form-group
          %input(type="text" autofocus="autofocus" name="query"  class="input-long search-query" placeholder="Matches..." value="#{params[:query]}")
          %p.small
            Use + or - to exclude or include a term, for example "pizza -meat"
        %div
          %input.btn.btn-large.btn-success(type="submit" id="search" value="search")
          %input.btn.btn-large.btn-warning(type="submit" id="download" name="download" value="download")

      %p
        - if @search
          = @search.results.total_count
        - else
          0
        documents matched out of
        = Email.count
        documents total.
      %p
        = paginate @search.results if @search

      %table#email-results.table.table-condensed.table-hover.table-bordered
        %thead
          %tr
            %th File
            %th Sent
            %th From/To
            %th Subject
        %tbody
          - @emails.each do |email|
            %tr(class="email-summary" data-email-id="#{email.id}")
              %td
                = link_to email.file_name, email_download_path(email)
              %td.nowrap
                = email.received.in_time_zone('Pacific Time (US & Canada)').to_date.to_s if email.received.present?
              %td
                From:
                = email.from
                %br
                To:
                = email.to
              %td
                = email.subject

      %p
        = paginate @search.results if @search

  .span6
    #email-content


